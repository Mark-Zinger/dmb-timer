[{"D:\\test\\dmb-timer\\src\\index.js":"1","D:\\test\\dmb-timer\\src\\reportWebVitals.js":"2","D:\\test\\dmb-timer\\src\\App.js":"3"},{"size":500,"mtime":499162500000,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"6","hashOfConfig":"5"},{"size":1350,"mtime":1612338914198,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"5pcs3a",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"13","messages":"14","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"10"},"D:\\test\\dmb-timer\\src\\index.js",[],["16","17"],"D:\\test\\dmb-timer\\src\\reportWebVitals.js",[],"D:\\test\\dmb-timer\\src\\App.js",["18","19","20"],"import './App.css';\nimport Countdown from 'react-countdown';\nimport { useRef, useEffect } from 'react'\n\n\n// Random component\nconst Completionist = () => <span>Кажется Миша уже едет домой!</span>;\n \n// Renderer callback with condition\nconst renderer = ({ days, hours, minutes, seconds, completed }) => {\n\n  if (completed) {\n    // Render a completed state\n    return <Completionist />;\n  } else {\n    // Render a countdown\n    return <span>\n      Миша приедет домой через <br/> {days} {dayWord(days)} {hours} часов {minutes} минут {seconds} секунд\n    </span>;\n  }\n};\n\nfunction dayWord (daysInt) {\n  const lastInt = daysInt.toString().slice(-1);\n  switch (lastInt) {\n    case '1': return 'день';\n    case '2' ||'3' || '4':  return 'дня';\n    case '5' || '6'||'7' || '8' ||'9' || '0': return 'дней';\n  }\n}\n\nfunction BackgroundVideo () {\n  const ref = useRef();\n  return (\n    <video\n      className=\"background\"\n      src='/videoplayback.mp4'\n      ref={ref}\n      autoPlay muted\n    />\n  )\n}\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Countdown\n          date={ new Date (1638448810000) }\n          renderer={renderer}\n        />\n        {/* <BackgroundVideo/> */}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","severity":1,"message":"26","line":3,"column":18,"nodeType":"27","messageId":"28","endLine":3,"endColumn":27},{"ruleId":"29","severity":1,"message":"30","line":25,"column":3,"nodeType":"31","messageId":"32","endLine":29,"endColumn":4},{"ruleId":"25","severity":1,"message":"33","line":32,"column":10,"nodeType":"27","messageId":"28","endLine":32,"endColumn":25},"no-native-reassign",["34"],"no-negated-in-lhs",["35"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'BackgroundVideo' is defined but never used.","no-global-assign","no-unsafe-negation"]