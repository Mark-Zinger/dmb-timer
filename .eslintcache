[{"D:\\test\\dmb-timer\\src\\index.js":"1","D:\\test\\dmb-timer\\src\\reportWebVitals.js":"2","D:\\test\\dmb-timer\\src\\App.js":"3"},{"size":517,"mtime":1612342228044,"results":"4","hashOfConfig":"5"},{"size":375,"mtime":1612342228046,"results":"6","hashOfConfig":"5"},{"size":1092,"mtime":1612343461808,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"5pcs3a",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"D:\\test\\dmb-timer\\src\\index.js",[],["16","17"],"D:\\test\\dmb-timer\\src\\reportWebVitals.js",[],"D:\\test\\dmb-timer\\src\\App.js",["18","19"],"import './App.css';\r\nimport Countdown from 'react-countdown';\r\nimport { useRef, useEffect } from 'react'\r\n\r\n\r\n// Random component\r\nconst Completionist = () => <span>Кажется Миша уже едет домой!</span>;\r\n \r\n// Renderer callback with condition\r\nconst renderer = ({ days, hours, minutes, seconds, completed }) => {\r\n  if (completed) {\r\n    // Render a completed state\r\n    return <Completionist />;\r\n  } else {\r\n    // Render a countdown\r\n    return <span>\r\n      Миша приедет домой через <br/> {days} дней {hours} часов {minutes} минут {seconds} секунд</span>;\r\n  }\r\n};\r\n\r\nfunction Background () {\r\n  const ref = useRef();\r\n  return (\r\n    <img\r\n      className=\"background\"\r\n      src='/background.jpg'\r\n      ref={ref}\r\n    />\r\n  )\r\n}\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <Countdown\r\n          date={ new Date (1638448810000) }\r\n          renderer={renderer}\r\n        />\r\n        <Background/>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",{"ruleId":"20","replacedBy":"21"},{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","severity":1,"message":"25","line":3,"column":18,"nodeType":"26","messageId":"27","endLine":3,"endColumn":27},{"ruleId":"28","severity":1,"message":"29","line":24,"column":5,"nodeType":"30","endLine":28,"endColumn":7},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]