{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Completionist","renderer","days","hours","minutes","seconds","completed","Background","ref","useRef","className","src","App","date","Date","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAMMA,EAAgB,kBAAM,oLAGtBC,EAAW,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,QACxC,OADiE,EAAhBC,UAGxC,cAAC,EAAD,IAGA,sKACoB,uBADpB,IAC2BJ,EAD3B,6BACuCC,EADvC,mCACqDC,EADrD,mCACqEC,EADrE,4CAKX,SAASE,IACP,IAAMC,EAAMC,mBACZ,OACE,qBACEC,UAAU,aACVC,IAAI,4BACJH,IAAKA,IAoBII,MAff,WAEE,OACE,qBAAKF,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,cAAC,IAAD,CACEG,KAAO,IAAIC,KAAM,aACjBb,SAAUA,IAEZ,cAACM,EAAD,UC5BOQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4fac1ef8.chunk.js","sourcesContent":["import './App.css';\r\nimport Countdown from 'react-countdown';\r\nimport { useRef, useEffect } from 'react'\r\n\r\n\r\n// Random component\r\nconst Completionist = () => <span>Кажется Миша уже едет домой!</span>;\r\n \r\n// Renderer callback with condition\r\nconst renderer = ({ days, hours, minutes, seconds, completed }) => {\r\n  if (completed) {\r\n    // Render a completed state\r\n    return <Completionist />;\r\n  } else {\r\n    // Render a countdown\r\n    return <span>\r\n      Миша приедет домой через <br/> {days} дней {hours} часов {minutes} минут {seconds} секунд</span>;\r\n  }\r\n};\r\n\r\nfunction Background () {\r\n  const ref = useRef();\r\n  return (\r\n    <img\r\n      className=\"background\"\r\n      src='/dmb-timer/background.jpg'\r\n      ref={ref}\r\n    />\r\n  )\r\n}\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <Countdown\r\n          date={ new Date (1638448810000) }\r\n          renderer={renderer}\r\n        />\r\n        <Background/>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}