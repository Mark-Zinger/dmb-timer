{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Completionist","renderer","days","hours","minutes","seconds","completed","dayWord","daysInt","toString","slice","App","className","date","Date","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAMMA,EAAgB,kBAAM,oLAGtBC,EAAW,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,QAExC,OAFiE,EAAhBC,UAIxC,cAAC,EAAD,IAGA,sKACoB,uBADpB,IAC2BJ,EAD3B,IACkCK,EAAQL,GAD1C,IACkDC,EADlD,mCACgEC,EADhE,mCACgFC,EADhF,4CAMX,SAASE,EAASC,GAEhB,OADgBA,EAAQC,WAAWC,OAAO,IAExC,IAAK,IAAK,MAAO,2BACjB,IAAK,IAAmB,MAAO,qBAC/B,IAAK,IAAqC,MAAO,4BA+BtCC,MAff,WAEE,OACE,qBAAKC,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAAC,IAAD,CACEC,KAAO,IAAIC,KAAM,aACjBb,SAAUA,SCtCLc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b65069fc.chunk.js","sourcesContent":["import './App.css';\nimport Countdown from 'react-countdown';\nimport { useRef, useEffect } from 'react'\n\n\n// Random component\nconst Completionist = () => <span>Кажется Миша уже едет домой!</span>;\n \n// Renderer callback with condition\nconst renderer = ({ days, hours, minutes, seconds, completed }) => {\n\n  if (completed) {\n    // Render a completed state\n    return <Completionist />;\n  } else {\n    // Render a countdown\n    return <span>\n      Миша приедет домой через <br/> {days} {dayWord(days)} {hours} часов {minutes} минут {seconds} секунд\n    </span>;\n  }\n};\n\nfunction dayWord (daysInt) {\n  const lastInt = daysInt.toString().slice(-1);\n  switch (lastInt) {\n    case '1': return 'день';\n    case '2' ||'3' || '4':  return 'дня';\n    case '5' || '6'||'7' || '8' ||'9' || '0': return 'дней';\n  }\n}\n\nfunction BackgroundVideo () {\n  const ref = useRef();\n  return (\n    <video\n      className=\"background\"\n      src='/videoplayback.mp4'\n      ref={ref}\n      autoPlay muted\n    />\n  )\n}\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Countdown\n          date={ new Date (1638448810000) }\n          renderer={renderer}\n        />\n        {/* <BackgroundVideo/> */}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}